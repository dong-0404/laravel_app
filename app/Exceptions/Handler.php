<?php

namespace App\Exceptions;

//use http\Env\Request;
use Illuminate\Http\Request;
//use Illuminate\Auth\AuthenticationException;
//use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;


class Handler extends ExceptionHandler
{
    /**
     * A list of exception types with their corresponding custom log levels.
     *
     * @var array<class-string<\Throwable>, \Psr\Log\LogLevel::*>
     *
     */
//    public function render($request, Throwable $e)
//    {
//        if($e instanceof ModelNotFoundException){
//            return response()->json([
//                'error'=> 'Resource not found'
//            ],404);
//        }
//        if($e instanceof AuthenticationException) {
//            return redirect()->guest('login');
//        }
//        return parent::render($request, $e); // TODO: Change the autogenerated stub
//    }

    protected $levels = [
        //
    ];

    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<\Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {

            $this->renderable(function (CustomException $e, Request $request) {
                return response()->json([
                    'message' => $e->getMessage()
                ], $e->getCode());
            });
    }

}
